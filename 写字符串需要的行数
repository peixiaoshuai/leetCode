题目描述：
  我们要把给定的字符串 S 从左到右写到每一行上，每一行的最大宽度为100个单位，如果我们在写某个字母的时候会使这行超过了100 个单位，
  那么我们应该把这个字母写到下一行。我们给定了一个数组 widths ，
  这个数组 widths[0] 代表 'a' 需要的单位， widths[1] 代表 'b' 需要的单位，...， widths[25] 代表 'z' 需要的单位。
  现在回答两个问题：至少多少行能放下S，以及最后一行使用的宽度是多少个单位？将你的答案作为长度为2的整数列表返回。
  示例 1:
    输入: 
      widths = [10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10]
      S = "abcdefghijklmnopqrstuvwxyz"
    输出: [3, 60]
    解释: 
      所有的字符拥有相同的占用单位10。所以书写所有的26个字母，
      我们需要2个整行和占用60个单位的一行。
  示例 2:
    输入: 
      widths = [4,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10]
      S = "bbbcccdddaaa"
    输出: [2, 4]
    解释: 
      除去字母'a'所有的字符都是相同的单位10，并且字符串 "bbbcccdddaa" 将会覆盖 9 * 10 + 2 * 4 = 98 个单位.
      最后一个字母 'a' 将会被写到第二行，因为第一行只剩下2个单位了。
      所以，这个答案是2行，第二行有4个单位宽度。
解题思路：
  遍历一遍字符串，模拟将字符填入单位的过程即可。
  代码：
    class Solution {
      public int[] numberOfLines(int[] widths, String S) {
          char [] cs = S.toCharArray();
          int index = 0;//行数
          int units = 0;//最后一行输入的单位
          for (int i = 0; i < cs.length; i++) {
            //若当前单位大于100，或者当前行剩余的单位不够书写当前字母，则另起一行
            if(units >= 100 || (100-units < widths[cs[i] - 'a'] )){
              index++;
              units = 0;
              units += widths[cs[i] - 'a'];
            }else{
              units += widths[cs[i] - 'a'];
            }
          }
          int[] reust = new int[2];
          //最后书写的字符，也需要记录一行
          if(units == 0){
            reust[0] = index;
          }else{
            reust[0] = index + 1;
          }
          reust[1] = units;
          return reust;
      }
  }
