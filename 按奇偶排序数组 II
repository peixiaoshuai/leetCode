题目描述：
  给定一个非负整数数组 A， A 中一半整数是奇数，一半整数是偶数。
  对数组进行排序，以便当 A[i] 为奇数时，i 也是奇数；当 A[i] 为偶数时， i 也是偶数。
  你可以返回任何满足上述条件的数组作为答案。
  示例：
    输入：[4,2,5,7]
    输出：[4,5,2,7]
  解释：
    [4,7,2,5]，[2,5,4,7]，[2,7,4,5] 也会被接受。
 解题思路：
 1.新建与原数组长度相等的新数组，遍历原数组，元素为偶数的，放到新数组索引为偶数的位置上，奇数同理
  class Solution {
    public int[] sortArrayByParityII(int[] A) {
      int[] a = new int[A.length];
      int j = 0;
      int k = 1;
      for (int i = 0; i < A.length; i++) {
        if(A[i] % 2 != 0){
          a[k] = A[i];
          k = k+2;
        }else{
          a[j] = A[i];
          j = j+2;
        }
      }
      return a;
      }
  }
  2.不需要新建数组，遍历原数组的索引偶数位，遇到奇数，则遍历原数组索引为奇数的元素，遇到偶数，两者交换。
    class Solution {
      public int[] sortArrayByParityII(int[] A) {
          int j = 1;
      for (int i = 0; i < A.length-1; i = i+2) {
        if(A[i] % 2 != 0){
          while (A[j] % 2 != 0) {
            j = j+2;
          }
                  int temp = A[i];
                  A[i] = A[j];
                  A[j] = temp;
        }

      }
      return A;
      }
  }
