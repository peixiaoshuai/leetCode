题目描述：
  在大小为 2N 的数组 A 中有 N+1 个不同的元素，其中有一个元素重复了 N 次。
  返回重复了 N 次的那个元素。
解题思路：
  解法一：
    /**
      暴力解法，分析题得知，N = A.length / 2;
      采用双循环，查询每一个元素出现的次数index,当index = N，则这个元素就是结果
    */
    代码：
     public int repeatedNTimes(int[] A) {
        int result = 0;
        int N = A.length / 2;
        for (int i = 0; i < A.length; i++) {
          int index = 0;
          for (int j = 0; j < A.length; j++) {
            if(A[i] == A[j]){
              index++;
            }
          }
          if(index == N){
            result = A[i];
            break;
          }
        }
        return result;
    }
  解法二：
     /**
      分析题意所知，数组中有重复的元素就是结果，
      利用java中set集合不能存储相同元素的特点，将数组的元素加入到set集合中，加入失败的那个元素就是所求结果
    */
    代码：
       public int repeatedNTimes(int[] A) {
          int result = 0;
          HashSet<Integer> set = new HashSet<Integer>();
          for (int i = 0; i < A.length; i++) {
            if(!set.add(A[i])){
                 result = A[i];  
               }
          }
          return result;
        }
